pipeline {
    agent none



    stages { 
        agent {
            docker {
                image 'python:2.7.16-slim'
                args '--user root'
                }
             }
        stage('Build') {
            when{
               changeset "**/vote/**" //when code chanfe on worker
             }
            steps {
                echo 'Compiling vote app'
                dir('vote'){
                    sh 'pip install -r requirements.txt'

                }
            }
        }
        stage('Test') {
        agent {
            docker {
                image 'python:2.7.16-slim'
                args '--user root'
                }
             }
            when{
               changeset "**/vote/**" //when code change on worker
             }            
            steps {
                echo 'Running Unit Tests on vote application'
                dir('vote'){
                    sh 'pip install -r requirements.txt'
                    sh 'nosetests -v'
                }
            }
        }

        stage('docker-package') {
            agent any
            when{
               branch 'master'
               changeset "**/vote/**" //when code chanfe on worker
             }
            steps {
                echo 'Packaging vote app with docker'
                script{
                        docker.withRegistry('https://index.docker.io/v1/', 'dockerlogin') {

                        def workerImage = docker.build("nhiuana/vote:v${env.BUILD_ID}", "./vote") //build the image with build number as tag

                        /* Push the container to the custom Registry */
                        workerImage.push()
                        workerImage.push("${env.BRANCH_NAME}") //push the image to docker hub with branch name as tag env.BRANCH_NAME
    }
                }
                
            }
        }

    }
    post { 
        always { 
            echo 'Build pipeline for result vote is complete'
            echo 'learnt by doing'
        }
        failure { 
            slackSend (channel: "instavote-cd", message: "Build Failed - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
        }
        success { 
            slackSend (channel: "instavote-cd", message: "Build Succeede - ${env.JOB_NAME} ${env.BUILD_NUMBER} (<${env.BUILD_URL}|Open>)")
            
        }
    }
}
